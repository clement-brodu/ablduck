Ext.data.JsonP.mip_os({"files":[],"uses":["cls.*"],"id":"class-mip.os","tagname":"class","name":"mip.os","extends":"cls.mip","author":"","comment":"\u003ch3\u003ePurpose\u003c/h3\u003e\n\u003cp\u003eThe OS class wrappers existing ABL OS commands to introduces a way to handle errors the same way we do in our\nstandard ABL application code. As an example, OS-COPY does not throw or raise an error. To determine the if a\ncommand resulted in an error, the OS-ERROR function needs to be interrogated. At best, the OS-ERROR function\nonly returns an unhelpful number which still needs to be interpreted and translated into a user-friendly message.\nThe methods in this class also performs some basic validation and manipulation of the source and target\nstrings provided. If you don\u0027t find a method that satisfies your needs or require more (or less) validation,\nplease log a task to improve the class.\u003c/p\u003e\n\u003ch3\u003eExample 1:\u003c/h3\u003e\n\u003cp\u003eExample of how to use this class in your code:\u003c/p\u003e\n","icon":"class","superclasses":["cls.mip","mip.os"],"subclasses":[],"implements":[],"members":[{"id":"method-appendToFile","name":"appendToFile","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eAppends the source file to the target file.\n\u003cstrong\u003eNOTE:\u003c/strong\u003e\nThe source and target has to be files. Specifying a directory will generate and error.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source file\u003c/p\u003e\n"},{"name":"ipcTarget","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe target file\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-copyFile","name":"copyFile","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eCopies the source file to the specified target.\n\u003cstrong\u003eNOTE:\u003c/strong\u003e\nWhen the target is a directory, the new file will have the same name as the source.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source file\u003c/p\u003e\n"},{"name":"ipcTarget","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe target file or directory\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-createDirectory","name":"createDirectory","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eCreates a single directory.\n\u003cstrong\u003eNOTE:\u003c/strong\u003e\nIf the directory already exists, no error is generated.\nIf a file with this name exists, an error is generated.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source directory\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-createDirectories","name":"createDirectories","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eCreates multiple directories.\n\u003cstrong\u003eNOTE:\u003c/strong\u003e\nIf the directory already exists, no error is generated.\nIf a file with this name exists, an error is generated.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source directories to be created in a comma-delimited list\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-deleteDirectory","name":"deleteDirectory","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eDeletes a single directory.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source directory\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-deleteDirectories","name":"deleteDirectories","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eDeletes multiple directories and all the subfolders and contents within.\n\u003cstrong\u003eNOTE:\u003c/strong\u003e\nIf the method encounters files or directories that are protected against deletes, it skips over them,\ngenerates an error code, but continues to delete any unprotected files and subdirectories that are specified.\nIf several such files or directories are encountered, the method returns information on the last error only.\nIf a subdirectory cannot be deleted, then the named directory is not deleted.\nIf and error was encountered on an entry in the list, the method is aborted and an error returned.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source directories in a comma-delimited list\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-deleteFile","name":"deleteFile","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eDeletes a single file.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source file\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-deleteFiles","name":"deleteFiles","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eDeletes multiple files.\n\u003cstrong\u003eNOTE:\u003c/strong\u003e\nIf and error was encountered on an entry in the list, the method is aborted and an error returned.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source files in a comma-delimited list\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-renameDirectory","name":"renameDirectory","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eRenames a directory.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source directory\u003c/p\u003e\n"},{"name":"ipcTarget","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe target directory\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"method-renameFile","name":"renameFile","owner":"mip.os","tagname":"method","comment":"\u003cp\u003eRenames a file.\n\u003cstrong\u003eNOTE:\u003c/strong\u003e\nIf the source and target file specify different directories, this methods both renames the file and moves it to the new directory.\u003c/p\u003e\n","parameters":[{"name":"ipcSource","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe source file\u003c/p\u003e\n"},{"name":"ipcTarget","datatype":"CHARACTER","mode":"INPUT","comment":"\u003cp\u003eThe target file\u003c/p\u003e\n"}],"returns":{"datatype":"LOGICAL","comment":""},"meta":{}},{"id":"property-mipEnv","name":"mipEnv","owner":"cls.mip","tagname":"property","datatype":"cls.mipenvironment","comment":"","meta":{}},{"id":"property-PrivateData","name":"PrivateData","owner":"cls.mip","tagname":"property","datatype":"CHARACTER","comment":"","meta":{}},{"id":"property-mipEnvStatic","name":"mipEnvStatic","owner":"cls.mip","tagname":"property","datatype":"cls.mipenvironment","comment":"","meta":{}}],"meta":{}});